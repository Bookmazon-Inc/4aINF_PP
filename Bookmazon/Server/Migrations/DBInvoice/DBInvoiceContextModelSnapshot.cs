// <auto-generated />
using System;
using Bookmazon.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookmazon.Server.Migrations.DBInvoice
{
    [DbContext(typeof(DBInvoiceContext))]
    partial class DBInvoiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bookmazon.Shared.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("GrossPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceStateID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("NetPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("VATPercentage")
                        .HasColumnType("int");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("InvoiceID");

                    b.HasIndex("InvoiceStateID");

                    b.ToTable("Invoice", "inv");
                });

            modelBuilder.Entity("Bookmazon.Shared.Models.InvoicePosition", b =>
                {
                    b.Property<int>("InvoicePositionID")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossPrice")
                        .HasColumnType("decimal (18,4)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<decimal>("NetPrice")
                        .HasColumnType("decimal (18,4)");

                    b.Property<string>("ProductTitle")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("InvoicePositionID", "InvoiceID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("InvoicePosition", "inv");
                });

            modelBuilder.Entity("Bookmazon.Shared.Models.InvoiceState", b =>
                {
                    b.Property<int>("InvoiceStateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceStateID"), 1L, 1);

                    b.Property<string>("Notes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InvoiceStateID");

                    b.ToTable("InvoiceState", "inv");
                });

            modelBuilder.Entity("Bookmazon.Shared.Models.Invoice", b =>
                {
                    b.HasOne("Bookmazon.Shared.Models.InvoiceState", "InvoiceState")
                        .WithMany("Invoices")
                        .HasForeignKey("InvoiceStateID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InvoiceState");
                });

            modelBuilder.Entity("Bookmazon.Shared.Models.InvoicePosition", b =>
                {
                    b.HasOne("Bookmazon.Shared.Models.Invoice", "Invoices")
                        .WithMany("InvoicePositions")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Bookmazon.Shared.Models.Invoice", b =>
                {
                    b.Navigation("InvoicePositions");
                });

            modelBuilder.Entity("Bookmazon.Shared.Models.InvoiceState", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
